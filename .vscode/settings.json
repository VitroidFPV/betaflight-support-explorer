{
	"prettier.documentSelectors": ["**/*.svelte"],
	"tailwindCSS.classAttributes": [
		"class",
		"base",
		"padding",
		"border",
		"background",
		"spaceY",
		"rounded",
		"width",
		"widthExpanded",
		"height",
		"size",
		"font",
		"shadow",
		"style",
		"hover",
		"active",
		"flexDirection",
		"classes",
		"fallbackBase",
		"fallbackClasses",
		"imageBase",
		"imageClasses",
		"controlBase",
		"controlGap",
		"controlHover",
		"controlInactive",
		"controlActive",
		"controlDisabled",
		"controlWidth",
		"controlHeight",
		"controlPadding",
		"controlRounded",
		"controlHover",
		"controlClasses",
		"leadBase",
		"leadSpaceX",
		"leadPadding",
		"leadClasses",
		"centerBase",
		"centerAlign",
		"centerPadding",
		"centerClasses",
		"contentBase",
		"contentBackground",
		"contentClasses",
		"indicatorBase",
		"indicatorBg",
		"indicatorText",
		"indicatorRounded",
		"indicatorClasses",
		"panelBase",
		"panelPadding",
		"panelRounded",
		"panelClasses",
		"toolbarBase",
		"toolbarGridCols",
		"toolbarGap",
		"toolbarClasses",
		"trailBase",
		"trailSpaceX",
		"trailPadding",
		"trailClasses",
		"headlineBase",
		"headlineClasses",
		"interfaceBase",
		"interfaceBg",
		"interfaceBorder",
		"interfaceBorderColor",
		"interfacePadding",
		"interfaceRounded",
		"interfaceIcon",
		"interfaceText",
		"interfaceSubtext",
		"interfaceClasses",
		"filesListBase",
		"filesListClasses",
		"fileBase",
		"fileBg",
		"fileGap",
		"filePadding",
		"fileRounded",
		"fileIcon",
		"fileName",
		"fileSize",
		"fileButton",
		"fileClasses",
		"stateInfo",
		"stateError",
		"stateSuccess",
		"stateActive",
		"stateInactive",
		"stateDisabled",
		"stateInteractive",
		"stateReadOnly",
		"stateInvalid",
		"stateFocused",
		"stateDragging",
		"stateLabelInactive",
		"stateLabelActive",
		"tilesBase",
		"tilesFlexDirection",
		"tilesJustify",
		"tilesItems",
		"tilesGap",
		"tilesClasses",
		"headerBase",
		"headerFlexDirection",
		"headerJustify",
		"headerItems",
		"headerGap",
		"headerClasses",
		"footerBase",
		"footerFlexDirection",
		"footerJustify",
		"footerItems",
		"footerGap",
		"footerClasses",
		"expandedPadding",
		"expandedGap",
		"expandedClasses",
		"labelBase",
		"labelText",
		"labelFill",
		"labelFontSize",
		"labelFontWeight",
		"labelClasses",
		"labelExpandedBase",
		"labelExpandedClasses",
		"buttonBase",
		"buttonActive",
		"buttonInactive",
		"buttonHover",
		"buttonClasses",
		"trackBase",
		"trackStroke",
		"trackBg",
		"trackRounded",
		"trackClasses",
		"meterBase",
		"meterStroke",
		"meterBg",
		"meterRounded",
		"meterTransition",
		"meterAnimate",
		"meterDuration",
		"meterClasses",
		"childrenBase",
		"childrenClasses",
		"svgBase",
		"svgClasses",
		"itemBase",
		"itemClasses",
		"orientVertical",
		"orientHorizontal",
		"thumbBase",
		"thumbSize",
		"thumbBg",
		"thumbRingSize",
		"thumbRingColor",
		"thumbRounded",
		"thumbCursor",
		"thumbInactive",
		"thumbActive",
		"thumbTranslateX",
		"thumbTransition",
		"thumbEase",
		"thumbDuration",
		"thumbClasses",
		"markersBase",
		"markersClasses",
		"markBase",
		"markText",
		"markOpacity",
		"markClasses",
		"iconInactiveBase",
		"iconActiveBase",
		"listBase",
		"listJustify",
		"listBorder",
		"listMargin",
		"listGap",
		"listClasses",
		"tagListBase",
		"tagListClasses",
		"tagBase",
		"tagBackground",
		"tagClasses",
		"inputEditBase",
		"tagEditBase",
		"tagEditBackground",
		"inputEditClasses",
		"buttonDeleteBase",
		"buttonDeleteClasses",
		"triggerBase",
		"triggerBackground",
		"triggerClasses",
		"positionerBase",
		"positionerClasses",
		"arrowBase",
		"arrowBackground",
		"arrowClasses",
		"groupBase",
		"groupZIndex",
		"groupGap",
		"groupClasses",
		"toastBase",
		"toastPadding",
		"toastGap",
		"toastShadow",
		"toastClasses",
		"messageBase",
		"messageTitle",
		"messageDescription",
		"messageClasses",
		"btnDismissBase",
		"btnDimissPreset",
		"btnDismissHover",
		"btnDismissClasses",
		"backdropClasses",
		"zIndex"
	],
	"eslint.enable": true,
	"eslint.validate": ["svelte"],
	"eslint.lintTask.enable": true,
	"eslint.format.enable": true,
	"[svelte]": {
		"editor.formatOnSave": true
	}
}
